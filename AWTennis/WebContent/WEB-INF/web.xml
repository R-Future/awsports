<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://java.sun.com/xml/ns/javaee" 
		xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
		id="WebApp_ID" version="2.5">
	<display-name>AWTennis</display-name>
	<welcome-file-list>
		 <welcome-file>index</welcome-file>
	</welcome-file-list>
	
	 <!-- 配置监听器，监听spring的配置文件，该文件用于将mapper,service,controller加载到spring容器中 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	 
	 <!-- 前端控制器 -->
	<servlet>
		<servlet-name>awTennis</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置awTennis加载的配置文件（该配置文件包括处理器映射器、视图解析器等的配置）
		若不配置contextConfigLocation,则会默认加载WEB-INF下的servletName-servlet.xml(即awTennis-servlet.xml)
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:awTennis.xml</param-value>
		</init-param>
		<!-- 表示servlet随服务器启动 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<!-- 解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	 <servlet-mapping>
	 	<servlet-name>awTennis</servlet-name>
	 	<!--
		有两种配置方式：
		 1. *.action（或*.do）,即以action(或do)为结尾的URL由DispatcherServlet进行解析
		 2. /，即所有地址都由DispatcherServlet解析，但需要配置静态文件不由其解析，该方法可实现RESTful风格的URL
		 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 默认欢迎页面 -->
	 <servlet-mapping>  
		<servlet-name>awTennis</servlet-name>
		<url-pattern>/index</url-pattern>  
	</servlet-mapping>
</web-app>