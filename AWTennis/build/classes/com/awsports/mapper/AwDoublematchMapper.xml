<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awsports.mapper.AwDoublematchMapper">
  <resultMap id="BaseResultMap" type="com.awsports.pojo.AwDoublematch">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="homeContestant" jdbcType="INTEGER" property="homecontestant" />
    <result column="awayPlayer" jdbcType="INTEGER" property="awayplayer" />
    <result column="matchTime" jdbcType="TIMESTAMP" property="matchtime" />
    <result column="matchPlace" jdbcType="INTEGER" property="matchplace" />
    <result column="tournamentID" jdbcType="INTEGER" property="tournamentid" />
    <result column="entry" jdbcType="INTEGER" property="entry" />
    <result column="round" jdbcType="INTEGER" property="round" />
    <result column="sets" jdbcType="INTEGER" property="sets" />
    <result column="outcome" jdbcType="BIT" property="outcome" />
    <result column="winnerPoint" jdbcType="INTEGER" property="winnerpoint" />
    <result column="loserPoint" jdbcType="INTEGER" property="loserpoint" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.awsports.pojo.AwDoublematch">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, homeContestant, awayPlayer, matchTime, matchPlace, tournamentID, entry, round, 
    sets, outcome, winnerPoint, loserPoint, created_at, updated_at, invalid
  </sql>
  <sql id="Blob_Column_List">
    note
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.awsports.pojo.AwDoublematchExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_doublematch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.awsports.pojo.AwDoublematchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aw_doublematch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.awsports.pojo.AwDoublematchExample">
    delete from aw_doublematch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awsports.pojo.AwDoublematch">
    insert into aw_doublematch (id, homeContestant, awayPlayer, 
      matchTime, matchPlace, tournamentID, 
      entry, round, sets, 
      outcome, winnerPoint, loserPoint, 
      created_at, updated_at, invalid, 
      note)
    values (#{id,jdbcType=INTEGER}, #{homecontestant,jdbcType=INTEGER}, #{awayplayer,jdbcType=INTEGER}, 
      #{matchtime,jdbcType=TIMESTAMP}, #{matchplace,jdbcType=INTEGER}, #{tournamentid,jdbcType=INTEGER}, 
      #{entry,jdbcType=INTEGER}, #{round,jdbcType=INTEGER}, #{sets,jdbcType=INTEGER}, 
      #{outcome,jdbcType=BIT}, #{winnerpoint,jdbcType=INTEGER}, #{loserpoint,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{invalid,jdbcType=BIT}, 
      #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awsports.pojo.AwDoublematch">
    insert into aw_doublematch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="homecontestant != null">
        homeContestant,
      </if>
      <if test="awayplayer != null">
        awayPlayer,
      </if>
      <if test="matchtime != null">
        matchTime,
      </if>
      <if test="matchplace != null">
        matchPlace,
      </if>
      <if test="tournamentid != null">
        tournamentID,
      </if>
      <if test="entry != null">
        entry,
      </if>
      <if test="round != null">
        round,
      </if>
      <if test="sets != null">
        sets,
      </if>
      <if test="outcome != null">
        outcome,
      </if>
      <if test="winnerpoint != null">
        winnerPoint,
      </if>
      <if test="loserpoint != null">
        loserPoint,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="homecontestant != null">
        #{homecontestant,jdbcType=INTEGER},
      </if>
      <if test="awayplayer != null">
        #{awayplayer,jdbcType=INTEGER},
      </if>
      <if test="matchtime != null">
        #{matchtime,jdbcType=TIMESTAMP},
      </if>
      <if test="matchplace != null">
        #{matchplace,jdbcType=INTEGER},
      </if>
      <if test="tournamentid != null">
        #{tournamentid,jdbcType=INTEGER},
      </if>
      <if test="entry != null">
        #{entry,jdbcType=INTEGER},
      </if>
      <if test="round != null">
        #{round,jdbcType=INTEGER},
      </if>
      <if test="sets != null">
        #{sets,jdbcType=INTEGER},
      </if>
      <if test="outcome != null">
        #{outcome,jdbcType=BIT},
      </if>
      <if test="winnerpoint != null">
        #{winnerpoint,jdbcType=INTEGER},
      </if>
      <if test="loserpoint != null">
        #{loserpoint,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awsports.pojo.AwDoublematchExample" resultType="java.lang.Long">
    select count(*) from aw_doublematch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aw_doublematch
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.homecontestant != null">
        homeContestant = #{record.homecontestant,jdbcType=INTEGER},
      </if>
      <if test="record.awayplayer != null">
        awayPlayer = #{record.awayplayer,jdbcType=INTEGER},
      </if>
      <if test="record.matchtime != null">
        matchTime = #{record.matchtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.matchplace != null">
        matchPlace = #{record.matchplace,jdbcType=INTEGER},
      </if>
      <if test="record.tournamentid != null">
        tournamentID = #{record.tournamentid,jdbcType=INTEGER},
      </if>
      <if test="record.entry != null">
        entry = #{record.entry,jdbcType=INTEGER},
      </if>
      <if test="record.round != null">
        round = #{record.round,jdbcType=INTEGER},
      </if>
      <if test="record.sets != null">
        sets = #{record.sets,jdbcType=INTEGER},
      </if>
      <if test="record.outcome != null">
        outcome = #{record.outcome,jdbcType=BIT},
      </if>
      <if test="record.winnerpoint != null">
        winnerPoint = #{record.winnerpoint,jdbcType=INTEGER},
      </if>
      <if test="record.loserpoint != null">
        loserPoint = #{record.loserpoint,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalid != null">
        invalid = #{record.invalid,jdbcType=BIT},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update aw_doublematch
    set id = #{record.id,jdbcType=INTEGER},
      homeContestant = #{record.homecontestant,jdbcType=INTEGER},
      awayPlayer = #{record.awayplayer,jdbcType=INTEGER},
      matchTime = #{record.matchtime,jdbcType=TIMESTAMP},
      matchPlace = #{record.matchplace,jdbcType=INTEGER},
      tournamentID = #{record.tournamentid,jdbcType=INTEGER},
      entry = #{record.entry,jdbcType=INTEGER},
      round = #{record.round,jdbcType=INTEGER},
      sets = #{record.sets,jdbcType=INTEGER},
      outcome = #{record.outcome,jdbcType=BIT},
      winnerPoint = #{record.winnerpoint,jdbcType=INTEGER},
      loserPoint = #{record.loserpoint,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aw_doublematch
    set id = #{record.id,jdbcType=INTEGER},
      homeContestant = #{record.homecontestant,jdbcType=INTEGER},
      awayPlayer = #{record.awayplayer,jdbcType=INTEGER},
      matchTime = #{record.matchtime,jdbcType=TIMESTAMP},
      matchPlace = #{record.matchplace,jdbcType=INTEGER},
      tournamentID = #{record.tournamentid,jdbcType=INTEGER},
      entry = #{record.entry,jdbcType=INTEGER},
      round = #{record.round,jdbcType=INTEGER},
      sets = #{record.sets,jdbcType=INTEGER},
      outcome = #{record.outcome,jdbcType=BIT},
      winnerPoint = #{record.winnerpoint,jdbcType=INTEGER},
      loserPoint = #{record.loserpoint,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>