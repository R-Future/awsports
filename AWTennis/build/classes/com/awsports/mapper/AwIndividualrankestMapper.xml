<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awsports.mapper.AwIndividualrankestMapper">
  <resultMap id="BaseResultMap" type="com.awsports.pojo.AwIndividualrankest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="entry" jdbcType="INTEGER" property="entry" />
    <result column="highestRanking" jdbcType="INTEGER" property="highestranking" />
    <result column="HRStartedAt" jdbcType="TIMESTAMP" property="hrstartedat" />
    <result column="NO1Weeks" jdbcType="INTEGER" property="no1weeks" />
    <result column="NO1ContiniousWeeks" jdbcType="INTEGER" property="no1continiousweeks" />
    <result column="NO1LongestContiniousWeeks" jdbcType="INTEGER" property="no1longestcontiniousweeks" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.awsports.pojo.AwIndividualrankest">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userID, entry, highestRanking, HRStartedAt, NO1Weeks, NO1ContiniousWeeks, NO1LongestContiniousWeeks, 
    created_at, updated_at, invalid
  </sql>
  <sql id="Blob_Column_List">
    note
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.awsports.pojo.AwIndividualrankestExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_individualrankest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.awsports.pojo.AwIndividualrankestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aw_individualrankest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_individualrankest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aw_individualrankest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.awsports.pojo.AwIndividualrankestExample">
    delete from aw_individualrankest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awsports.pojo.AwIndividualrankest">
    insert into aw_individualrankest (id, userID, entry, 
      highestRanking, HRStartedAt, NO1Weeks, 
      NO1ContiniousWeeks, NO1LongestContiniousWeeks, 
      created_at, updated_at, invalid, 
      note)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{entry,jdbcType=INTEGER}, 
      #{highestranking,jdbcType=INTEGER}, #{hrstartedat,jdbcType=TIMESTAMP}, #{no1weeks,jdbcType=INTEGER}, 
      #{no1continiousweeks,jdbcType=INTEGER}, #{no1longestcontiniousweeks,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{invalid,jdbcType=BIT}, 
      #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awsports.pojo.AwIndividualrankest">
    insert into aw_individualrankest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="entry != null">
        entry,
      </if>
      <if test="highestranking != null">
        highestRanking,
      </if>
      <if test="hrstartedat != null">
        HRStartedAt,
      </if>
      <if test="no1weeks != null">
        NO1Weeks,
      </if>
      <if test="no1continiousweeks != null">
        NO1ContiniousWeeks,
      </if>
      <if test="no1longestcontiniousweeks != null">
        NO1LongestContiniousWeeks,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="entry != null">
        #{entry,jdbcType=INTEGER},
      </if>
      <if test="highestranking != null">
        #{highestranking,jdbcType=INTEGER},
      </if>
      <if test="hrstartedat != null">
        #{hrstartedat,jdbcType=TIMESTAMP},
      </if>
      <if test="no1weeks != null">
        #{no1weeks,jdbcType=INTEGER},
      </if>
      <if test="no1continiousweeks != null">
        #{no1continiousweeks,jdbcType=INTEGER},
      </if>
      <if test="no1longestcontiniousweeks != null">
        #{no1longestcontiniousweeks,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awsports.pojo.AwIndividualrankestExample" resultType="java.lang.Long">
    select count(*) from aw_individualrankest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aw_individualrankest
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.entry != null">
        entry = #{record.entry,jdbcType=INTEGER},
      </if>
      <if test="record.highestranking != null">
        highestRanking = #{record.highestranking,jdbcType=INTEGER},
      </if>
      <if test="record.hrstartedat != null">
        HRStartedAt = #{record.hrstartedat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.no1weeks != null">
        NO1Weeks = #{record.no1weeks,jdbcType=INTEGER},
      </if>
      <if test="record.no1continiousweeks != null">
        NO1ContiniousWeeks = #{record.no1continiousweeks,jdbcType=INTEGER},
      </if>
      <if test="record.no1longestcontiniousweeks != null">
        NO1LongestContiniousWeeks = #{record.no1longestcontiniousweeks,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalid != null">
        invalid = #{record.invalid,jdbcType=BIT},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update aw_individualrankest
    set id = #{record.id,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      entry = #{record.entry,jdbcType=INTEGER},
      highestRanking = #{record.highestranking,jdbcType=INTEGER},
      HRStartedAt = #{record.hrstartedat,jdbcType=TIMESTAMP},
      NO1Weeks = #{record.no1weeks,jdbcType=INTEGER},
      NO1ContiniousWeeks = #{record.no1continiousweeks,jdbcType=INTEGER},
      NO1LongestContiniousWeeks = #{record.no1longestcontiniousweeks,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aw_individualrankest
    set id = #{record.id,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      entry = #{record.entry,jdbcType=INTEGER},
      highestRanking = #{record.highestranking,jdbcType=INTEGER},
      HRStartedAt = #{record.hrstartedat,jdbcType=TIMESTAMP},
      NO1Weeks = #{record.no1weeks,jdbcType=INTEGER},
      NO1ContiniousWeeks = #{record.no1continiousweeks,jdbcType=INTEGER},
      NO1LongestContiniousWeeks = #{record.no1longestcontiniousweeks,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.awsports.pojo.AwIndividualrankest">
    update aw_individualrankest
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="entry != null">
        entry = #{entry,jdbcType=INTEGER},
      </if>
      <if test="highestranking != null">
        highestRanking = #{highestranking,jdbcType=INTEGER},
      </if>
      <if test="hrstartedat != null">
        HRStartedAt = #{hrstartedat,jdbcType=TIMESTAMP},
      </if>
      <if test="no1weeks != null">
        NO1Weeks = #{no1weeks,jdbcType=INTEGER},
      </if>
      <if test="no1continiousweeks != null">
        NO1ContiniousWeeks = #{no1continiousweeks,jdbcType=INTEGER},
      </if>
      <if test="no1longestcontiniousweeks != null">
        NO1LongestContiniousWeeks = #{no1longestcontiniousweeks,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.awsports.pojo.AwIndividualrankest">
    update aw_individualrankest
    set userID = #{userid,jdbcType=INTEGER},
      entry = #{entry,jdbcType=INTEGER},
      highestRanking = #{highestranking,jdbcType=INTEGER},
      HRStartedAt = #{hrstartedat,jdbcType=TIMESTAMP},
      NO1Weeks = #{no1weeks,jdbcType=INTEGER},
      NO1ContiniousWeeks = #{no1continiousweeks,jdbcType=INTEGER},
      NO1LongestContiniousWeeks = #{no1longestcontiniousweeks,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awsports.pojo.AwIndividualrankest">
    update aw_individualrankest
    set userID = #{userid,jdbcType=INTEGER},
      entry = #{entry,jdbcType=INTEGER},
      highestRanking = #{highestranking,jdbcType=INTEGER},
      HRStartedAt = #{hrstartedat,jdbcType=TIMESTAMP},
      NO1Weeks = #{no1weeks,jdbcType=INTEGER},
      NO1ContiniousWeeks = #{no1continiousweeks,jdbcType=INTEGER},
      NO1LongestContiniousWeeks = #{no1longestcontiniousweeks,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>