<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	
	<!-- 加载db.properties -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<!-- 取连接池中连接的最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<!-- 初始化连接 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<!-- 验证使用的SQL -->
		<property name="validationQuery" value="${jdbc.validationQuery}"/>
		<!-- 明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将从池中去除. -->
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<!-- 借出连接时不要测试，否则很影响性能 -->
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<!-- 间隔一定时间运行一次空闲连接回收器 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 池中空闲链接在设置时间后回收 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<!-- 空闲连接回收器运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
	</bean>	
	
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
	</bean>
	
	<!-- 配置mapper扫描器 ,注册mapper.xml-->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描该包下的所有mapper.xml -->
		<property name="basePackage" value="com.awsports.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	
	<!-- 配置数据库事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 配置传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 这边出了问题，一直无法创建bean！！！ 原因是缺少aspectjweaver-xxx.jar-->
	<!-- aop -->
	<aop:config>
		<!-- 监控com.awsports.service.impl下的所有类中的所有方法 -->
		<aop:pointcut id="pc" expression="execution(* com.awsports.service.impl.*.*(..))"/>
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
	</aop:config>
</beans>