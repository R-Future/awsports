<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awsports.mapper.AwEventMapper">
  <resultMap id="BaseResultMap" type="com.awsports.pojo.AwEvent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="publisher" jdbcType="INTEGER" property="publisher" />
    <result column="contact" jdbcType="INTEGER" property="contact" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="sponsor" jdbcType="VARCHAR" property="sponsor" />
    <result column="numberOfPlayer" jdbcType="INTEGER" property="numberofplayer" />
    <result column="startTime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="cost" jdbcType="DOUBLE" property="cost" />
    <result column="enrollingTime" jdbcType="TIMESTAMP" property="enrollingtime" />
    <result column="closingTime" jdbcType="TIMESTAMP" property="closingtime" />
    <result column="draw" jdbcType="CHAR" property="draw" />
    <result column="schedule" jdbcType="CHAR" property="schedule" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdat" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedat" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.awsports.pojo.AwEventWithBLOBs">
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, publisher, contact, cover, name, place, type, sponsor, numberOfPlayer, startTime, 
    endTime, cost, enrollingTime, closingTime, draw, schedule, createdAt, updatedAt, 
    invalid
  </sql>
  <sql id="Blob_Column_List">
    detail, note
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.awsports.pojo.AwEventExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.awsports.pojo.AwEventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aw_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_event
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aw_event
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.awsports.pojo.AwEventExample">
    delete from aw_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awsports.pojo.AwEventWithBLOBs">
    insert into aw_event (id, publisher, contact, 
      cover, name, place, 
      type, sponsor, numberOfPlayer, 
      startTime, endTime, cost, 
      enrollingTime, closingTime, draw, 
      schedule, createdAt, updatedAt, 
      invalid, detail, note
      )
    values (#{id,jdbcType=INTEGER}, #{publisher,jdbcType=INTEGER}, #{contact,jdbcType=INTEGER}, 
      #{cover,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{sponsor,jdbcType=VARCHAR}, #{numberofplayer,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{cost,jdbcType=DOUBLE}, 
      #{enrollingtime,jdbcType=TIMESTAMP}, #{closingtime,jdbcType=TIMESTAMP}, #{draw,jdbcType=CHAR}, 
      #{schedule,jdbcType=CHAR}, #{createdat,jdbcType=TIMESTAMP}, #{updatedat,jdbcType=TIMESTAMP}, 
      #{invalid,jdbcType=BIT}, #{detail,jdbcType=LONGVARCHAR}, #{note,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.awsports.pojo.AwEventWithBLOBs">
    insert into aw_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="sponsor != null">
        sponsor,
      </if>
      <if test="numberofplayer != null">
        numberOfPlayer,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="enrollingtime != null">
        enrollingTime,
      </if>
      <if test="closingtime != null">
        closingTime,
      </if>
      <if test="draw != null">
        draw,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="updatedat != null">
        updatedAt,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="sponsor != null">
        #{sponsor,jdbcType=VARCHAR},
      </if>
      <if test="numberofplayer != null">
        #{numberofplayer,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="enrollingtime != null">
        #{enrollingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="closingtime != null">
        #{closingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="draw != null">
        #{draw,jdbcType=CHAR},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=CHAR},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null">
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awsports.pojo.AwEventExample" resultType="java.lang.Long">
    select count(*) from aw_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aw_event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=INTEGER},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.sponsor != null">
        sponsor = #{record.sponsor,jdbcType=VARCHAR},
      </if>
      <if test="record.numberofplayer != null">
        numberOfPlayer = #{record.numberofplayer,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DOUBLE},
      </if>
      <if test="record.enrollingtime != null">
        enrollingTime = #{record.enrollingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closingtime != null">
        closingTime = #{record.closingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.draw != null">
        draw = #{record.draw,jdbcType=CHAR},
      </if>
      <if test="record.schedule != null">
        schedule = #{record.schedule,jdbcType=CHAR},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedat != null">
        updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalid != null">
        invalid = #{record.invalid,jdbcType=BIT},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update aw_event
    set id = #{record.id,jdbcType=INTEGER},
      publisher = #{record.publisher,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      sponsor = #{record.sponsor,jdbcType=VARCHAR},
      numberOfPlayer = #{record.numberofplayer,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      cost = #{record.cost,jdbcType=DOUBLE},
      enrollingTime = #{record.enrollingtime,jdbcType=TIMESTAMP},
      closingTime = #{record.closingtime,jdbcType=TIMESTAMP},
      draw = #{record.draw,jdbcType=CHAR},
      schedule = #{record.schedule,jdbcType=CHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      detail = #{record.detail,jdbcType=LONGVARCHAR},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aw_event
    set id = #{record.id,jdbcType=INTEGER},
      publisher = #{record.publisher,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      sponsor = #{record.sponsor,jdbcType=VARCHAR},
      numberOfPlayer = #{record.numberofplayer,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      cost = #{record.cost,jdbcType=DOUBLE},
      enrollingTime = #{record.enrollingtime,jdbcType=TIMESTAMP},
      closingTime = #{record.closingtime,jdbcType=TIMESTAMP},
      draw = #{record.draw,jdbcType=CHAR},
      schedule = #{record.schedule,jdbcType=CHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.awsports.pojo.AwEventWithBLOBs">
    update aw_event
    <set>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="sponsor != null">
        sponsor = #{sponsor,jdbcType=VARCHAR},
      </if>
      <if test="numberofplayer != null">
        numberOfPlayer = #{numberofplayer,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="enrollingtime != null">
        enrollingTime = #{enrollingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="closingtime != null">
        closingTime = #{closingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="draw != null">
        draw = #{draw,jdbcType=CHAR},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=CHAR},
      </if>
      <if test="createdat != null">
        createdAt = #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null">
        updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.awsports.pojo.AwEventWithBLOBs">
    update aw_event
    set publisher = #{publisher,jdbcType=INTEGER},
      contact = #{contact,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sponsor = #{sponsor,jdbcType=VARCHAR},
      numberOfPlayer = #{numberofplayer,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      cost = #{cost,jdbcType=DOUBLE},
      enrollingTime = #{enrollingtime,jdbcType=TIMESTAMP},
      closingTime = #{closingtime,jdbcType=TIMESTAMP},
      draw = #{draw,jdbcType=CHAR},
      schedule = #{schedule,jdbcType=CHAR},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT},
      detail = #{detail,jdbcType=LONGVARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awsports.pojo.AwEvent">
    update aw_event
    set publisher = #{publisher,jdbcType=INTEGER},
      contact = #{contact,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sponsor = #{sponsor,jdbcType=VARCHAR},
      numberOfPlayer = #{numberofplayer,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      cost = #{cost,jdbcType=DOUBLE},
      enrollingTime = #{enrollingtime,jdbcType=TIMESTAMP},
      closingTime = #{closingtime,jdbcType=TIMESTAMP},
      draw = #{draw,jdbcType=CHAR},
      schedule = #{schedule,jdbcType=CHAR},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>