<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awsports.mapper.AwSinglesMatchMapper">
  <resultMap id="BaseResultMap" type="com.awsports.pojo.AwSinglesMatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eventId" jdbcType="INTEGER" property="eventid" />
    <result column="homeId" jdbcType="INTEGER" property="homeid" />
    <result column="guestId" jdbcType="INTEGER" property="guestid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="round" jdbcType="VARCHAR" property="round" />
    <result column="isHomeRetired" jdbcType="BIT" property="ishomeretired" />
    <result column="isGuestRetired" jdbcType="BIT" property="isguestretired" />
    <result column="homePoint" jdbcType="INTEGER" property="homepoint" />
    <result column="guestPoint" jdbcType="INTEGER" property="guestpoint" />
    <result column="isHomeWin" jdbcType="BIT" property="ishomewin" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdat" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedat" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
    <result column="mirror" jdbcType="VARCHAR" property="mirror" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.awsports.pojo.AwSinglesMatch">
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, eventId, homeId, guestId, type, score, round, isHomeRetired, isGuestRetired, 
    homePoint, guestPoint, isHomeWin, createdAt, updatedAt, invalid, mirror
  </sql>
  <sql id="Blob_Column_List">
    note
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.awsports.pojo.AwSinglesMatchExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_singles_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.awsports.pojo.AwSinglesMatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aw_singles_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from aw_singles_match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aw_singles_match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.awsports.pojo.AwSinglesMatchExample">
    delete from aw_singles_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awsports.pojo.AwSinglesMatch">
    insert into aw_singles_match (id, eventId, homeId, 
      guestId, type, score, 
      round, isHomeRetired, isGuestRetired, 
      homePoint, guestPoint, isHomeWin, 
      createdAt, updatedAt, invalid, 
      mirror, note)
    values (#{id,jdbcType=INTEGER}, #{eventid,jdbcType=INTEGER}, #{homeid,jdbcType=INTEGER}, 
      #{guestid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{round,jdbcType=VARCHAR}, #{ishomeretired,jdbcType=BIT}, #{isguestretired,jdbcType=BIT}, 
      #{homepoint,jdbcType=INTEGER}, #{guestpoint,jdbcType=INTEGER}, #{ishomewin,jdbcType=BIT}, 
      #{createdat,jdbcType=TIMESTAMP}, #{updatedat,jdbcType=TIMESTAMP}, #{invalid,jdbcType=BIT}, 
      #{mirror,jdbcType=VARCHAR}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awsports.pojo.AwSinglesMatch">
    insert into aw_singles_match
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eventid != null">
        eventId,
      </if>
      <if test="homeid != null">
        homeId,
      </if>
      <if test="guestid != null">
        guestId,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="round != null">
        round,
      </if>
      <if test="ishomeretired != null">
        isHomeRetired,
      </if>
      <if test="isguestretired != null">
        isGuestRetired,
      </if>
      <if test="homepoint != null">
        homePoint,
      </if>
      <if test="guestpoint != null">
        guestPoint,
      </if>
      <if test="ishomewin != null">
        isHomeWin,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="updatedat != null">
        updatedAt,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
      <if test="mirror != null">
        mirror,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eventid != null">
        #{eventid,jdbcType=INTEGER},
      </if>
      <if test="homeid != null">
        #{homeid,jdbcType=INTEGER},
      </if>
      <if test="guestid != null">
        #{guestid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        #{round,jdbcType=VARCHAR},
      </if>
      <if test="ishomeretired != null">
        #{ishomeretired,jdbcType=BIT},
      </if>
      <if test="isguestretired != null">
        #{isguestretired,jdbcType=BIT},
      </if>
      <if test="homepoint != null">
        #{homepoint,jdbcType=INTEGER},
      </if>
      <if test="guestpoint != null">
        #{guestpoint,jdbcType=INTEGER},
      </if>
      <if test="ishomewin != null">
        #{ishomewin,jdbcType=BIT},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null">
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
      <if test="mirror != null">
        #{mirror,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awsports.pojo.AwSinglesMatchExample" resultType="java.lang.Long">
    select count(*) from aw_singles_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aw_singles_match
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventid != null">
        eventId = #{record.eventid,jdbcType=INTEGER},
      </if>
      <if test="record.homeid != null">
        homeId = #{record.homeid,jdbcType=INTEGER},
      </if>
      <if test="record.guestid != null">
        guestId = #{record.guestid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.round != null">
        round = #{record.round,jdbcType=VARCHAR},
      </if>
      <if test="record.ishomeretired != null">
        isHomeRetired = #{record.ishomeretired,jdbcType=BIT},
      </if>
      <if test="record.isguestretired != null">
        isGuestRetired = #{record.isguestretired,jdbcType=BIT},
      </if>
      <if test="record.homepoint != null">
        homePoint = #{record.homepoint,jdbcType=INTEGER},
      </if>
      <if test="record.guestpoint != null">
        guestPoint = #{record.guestpoint,jdbcType=INTEGER},
      </if>
      <if test="record.ishomewin != null">
        isHomeWin = #{record.ishomewin,jdbcType=BIT},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedat != null">
        updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalid != null">
        invalid = #{record.invalid,jdbcType=BIT},
      </if>
      <if test="record.mirror != null">
        mirror = #{record.mirror,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update aw_singles_match
    set id = #{record.id,jdbcType=INTEGER},
      eventId = #{record.eventid,jdbcType=INTEGER},
      homeId = #{record.homeid,jdbcType=INTEGER},
      guestId = #{record.guestid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      round = #{record.round,jdbcType=VARCHAR},
      isHomeRetired = #{record.ishomeretired,jdbcType=BIT},
      isGuestRetired = #{record.isguestretired,jdbcType=BIT},
      homePoint = #{record.homepoint,jdbcType=INTEGER},
      guestPoint = #{record.guestpoint,jdbcType=INTEGER},
      isHomeWin = #{record.ishomewin,jdbcType=BIT},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      mirror = #{record.mirror,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aw_singles_match
    set id = #{record.id,jdbcType=INTEGER},
      eventId = #{record.eventid,jdbcType=INTEGER},
      homeId = #{record.homeid,jdbcType=INTEGER},
      guestId = #{record.guestid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      round = #{record.round,jdbcType=VARCHAR},
      isHomeRetired = #{record.ishomeretired,jdbcType=BIT},
      isGuestRetired = #{record.isguestretired,jdbcType=BIT},
      homePoint = #{record.homepoint,jdbcType=INTEGER},
      guestPoint = #{record.guestpoint,jdbcType=INTEGER},
      isHomeWin = #{record.ishomewin,jdbcType=BIT},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedat,jdbcType=TIMESTAMP},
      invalid = #{record.invalid,jdbcType=BIT},
      mirror = #{record.mirror,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.awsports.pojo.AwSinglesMatch">
    update aw_singles_match
    <set>
      <if test="eventid != null">
        eventId = #{eventid,jdbcType=INTEGER},
      </if>
      <if test="homeid != null">
        homeId = #{homeid,jdbcType=INTEGER},
      </if>
      <if test="guestid != null">
        guestId = #{guestid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="round != null">
        round = #{round,jdbcType=VARCHAR},
      </if>
      <if test="ishomeretired != null">
        isHomeRetired = #{ishomeretired,jdbcType=BIT},
      </if>
      <if test="isguestretired != null">
        isGuestRetired = #{isguestretired,jdbcType=BIT},
      </if>
      <if test="homepoint != null">
        homePoint = #{homepoint,jdbcType=INTEGER},
      </if>
      <if test="guestpoint != null">
        guestPoint = #{guestpoint,jdbcType=INTEGER},
      </if>
      <if test="ishomewin != null">
        isHomeWin = #{ishomewin,jdbcType=BIT},
      </if>
      <if test="createdat != null">
        createdAt = #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedat != null">
        updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
      <if test="mirror != null">
        mirror = #{mirror,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.awsports.pojo.AwSinglesMatch">
    update aw_singles_match
    set eventId = #{eventid,jdbcType=INTEGER},
      homeId = #{homeid,jdbcType=INTEGER},
      guestId = #{guestid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      round = #{round,jdbcType=VARCHAR},
      isHomeRetired = #{ishomeretired,jdbcType=BIT},
      isGuestRetired = #{isguestretired,jdbcType=BIT},
      homePoint = #{homepoint,jdbcType=INTEGER},
      guestPoint = #{guestpoint,jdbcType=INTEGER},
      isHomeWin = #{ishomewin,jdbcType=BIT},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT},
      mirror = #{mirror,jdbcType=VARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awsports.pojo.AwSinglesMatch">
    update aw_singles_match
    set eventId = #{eventid,jdbcType=INTEGER},
      homeId = #{homeid,jdbcType=INTEGER},
      guestId = #{guestid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      round = #{round,jdbcType=VARCHAR},
      isHomeRetired = #{ishomeretired,jdbcType=BIT},
      isGuestRetired = #{isguestretired,jdbcType=BIT},
      homePoint = #{homepoint,jdbcType=INTEGER},
      guestPoint = #{guestpoint,jdbcType=INTEGER},
      isHomeWin = #{ishomewin,jdbcType=BIT},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      invalid = #{invalid,jdbcType=BIT},
      mirror = #{mirror,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>